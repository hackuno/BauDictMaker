#loc= IT|EN - the language
#Example:
#loc=IT

loc=IT



#If you want the program print only the TEST word when it find it. For test purpose.
#Example
#test=Iknow_youWillFindMe!

test=



#The desidred cardinality, min 1 - max 5 - it's the number of the final poutput consecutive / concatenated words
#
#	1 = The output word will be composed by 1 word
#	2 = The output word will be composed by the union of 2 words
#	3 = The output word will be composed by the union of 3 words
#	4 = The output word will be composed by the union of 4 words
#	5 = The output word will be composed by the union of 5 words
#Example 
#card=1

card=2



#The the Junction/Symbols modality that you want to use
#	0 = NONE	Symbols will not be tested
#	1 = ALL_JUNCTION	Symbols will be tested between all words and at the corner of the final result
#	2 = ALL_JUNCTION_2XCORNERS	As ALL_JUNCTION but the corners will be 2x
#	3 = ALL_JUNCTION_1X2XCORNERS	As ALL_JUNCTION + ALL_JUNCTION_2XCORNERS
#	4 = ONLY_INSIDE	Symbols will be tested only as junction between words
#	5 = ONLY_CORNERS	Symbols will be tested only at the corners of the final result
#	6 = ONLY_CORNERS2X	As ONLY_CORNERS but 2X
#Example
#junct=1

junct=2




#The Metamorph mode about UpperCase/Lower you want to use
#	0 = NONE	No word modification will be tested
#	1 = ALL_COMBO	All possible combination of upper/lower letters
#	2 = FIRST_LAST	First and Last character of any words will be tested as upper and lower in any possible combination
#	3 = FIRST	First character of any words will be tested as upper and lower
#	4 = LAST	Last character of any words will be tested as upper and lower
#Example
#uplow=1

uplow=3





#The path to the file containing the symbols to use at runtime
#Example
#sym-file=

sym-file=execs/symbols.txt



#The path to the directory of the files containig the Blocks of words. 
#N.B.! All the files will be processed. And every file is considered a single block of words, so be careful and make a dedicated dir!
#The block of words are meant to be divided into category words that you don't want to be testet eachothers, so for example:
#	All nicknames  block1 (john, jonny)
#	All dates > block2 (12 45)
#	All children names > block3 (lisa roberto)
#In this way john will never be combined with jonny and lisa will never be combined with roberto
# N.B File content structure
#	Every word MUST BE put vertically, for example a good file is (the extension does not count)

#File: block1-nicks.txt
#	jonny
#	john
#	mrj
#File: block2-age.txt
#	12
#	18
#	25 
#Example
#blocks-dir="./blocks"
blocks-dir=execs/run1
	

#Path to leet dictionary, if provided a good path, when calling uplow mode, i'll put also leet try inside
#leet-dict=execs/leet.txt
		
leet-dict=execs/leet.txt
		
#Preprocessor add some blocks of words to your lists:
#	CURR_YEAR(1,1,"Add current year as 2018 and 18","Aggiunge l'anno corrente come 2018 e 18"),
#	PREV_YEAR(1,1,"Add previous year as 2017 and 17","Aggiunge l'anno precedente come 2017 e 17"),
#	MONTH_SINGLE_ZERO(3,2,"Add month like 1,2,3...","Aggiungi i mesi come 1,2,3..."),
#	MONTH_DOUBLE_ZERO(4,2,"Add month as 01,02,03 ...","Aggiungi i mesi come 01,02,03 ..."),
#	MONTH_TXT_3_IT(5,2,"Add month as Gen Feb ...","Aggiungi i mesi come Gen Feb ..."),
#	MONTH_TXT_3_EN(6,2,"Add month as Jan Feb ...","Aggiungi i mesi come Jan Feb ..."),
#	MONTH_TXT_4_IT(7,2,"Add month as Genn Febb ...","Aggiungi i mesi come Genn Febb ..."),
#	MONTH_TXT_4_EN(8,2,"Add month as Janu Febr ...","Aggiungi i mesi come Janu Febr ..."),
#	NUMBERS0_9(9,4,"Add numbers from 0 to 9 as 0,1,2,...","Aggiunge i numeri 0 a 9 come 0,1,2,..."),
#	NUMBERS0_9_DOUBLE(10,4,"Add numbers from 0 to 9 as 00,01,02,...","Aggiunge i numeri 0 a 9 come 00,01,02,..."),
#	NUMBERS1_31(11,4,"Add numbers from 0 to 31 as 0,1,2,...","Aggiunge i numeri 0 a 31 come 0,1,2,..."),
#	NUMBERS1_31_DOUBLE(12,4,"Add numbers from 0 to 31 as 00,01,02,...","Aggiunge i numeri 0 a 31 come 00,01,02,...");
#preproc=#1#2#3...
preproc=#1#2


